@{
    Layout = null;
}


<style>
    .letraGrande {
        font-size: 20px;
    }

    #borderResumen {
        border: 5px ridge #1C6EA4;
        border-radius: 5px;
    }

    .centrado {
        text-align: center;
        align-content: center;
    }

    .step_descr {
        font-size: 26px;
    }

    .form-group {
        margin-bottom: 26px;
    }

    .form-control:disabled,
    .form-control[readonly] {
        background-color: #ffffff;
        opacity: 1;
    }

    .has-success .form-control,
    .has-success .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .has-success .select2-selection__rendered,
    .has-success .select2-container--default .select2-selection--single,
    .select2-container--default .has-success .select2-selection--single,
    .has-success .select2-selection.select2-selection--multiple,
    .has-success .wizard .content > .body input,
    .wizard .content > .body .has-success input,
    .has-success .mce-floatpanel .mce-textbox,
    .mce-floatpanel .has-success .mce-textbox,
    .has-success .mce-floatpanel .mce-btn,
    .mce-floatpanel .has-success .mce-btn,
    .has-success .dataTables_wrapper .dataTables_filter input,
    .dataTables_wrapper .dataTables_filter .has-success input,
    .has-success .dataTables_wrapper .dataTables_length select,
    .dataTables_wrapper .dataTables_length .has-success select,
    .has-success .jsgrid-cell input,
    .jsgrid-cell .has-success input,
    .has-success .jsgrid-cell select,
    .jsgrid-cell .has-success select,
    .has-success .tablesaw-bar .btn-select select,
    .tablesaw-bar .btn-select .has-success select,
    .has-success .dd-handle,
    .has-success .dd3-content,
    .has-success .app-search .form-control:focus,
    .app-search .has-success .form-control:focus,
    .has-success .app-search .jsgrid-cell input:focus,
    .app-search .jsgrid-cell .has-success input:focus,
    .has-success .jsgrid-cell .app-search input:focus,
    .jsgrid-cell .app-search .has-success input:focus,
    .has-success .app-search .jsgrid-cell select:focus,
    .app-search .jsgrid-cell .has-success select:focus,
    .has-success .jsgrid-cell .app-search select:focus,
    .jsgrid-cell .app-search .has-success select:focus,
    .has-success .app-search .dd-handle:focus,
    .app-search .has-success .dd-handle:focus,
    .has-success .app-search .dd3-content:focus,
    .app-search .has-success .dd3-content:focus {
        border-color: rgba(113, 170, 104, 0.5);
    }

        .has-success .form-control:focus,
        .has-success .select2-container--default .select2-selection--single .select2-selection__rendered:focus,
        .select2-container--default .select2-selection--single .has-success .select2-selection__rendered:focus,
        .has-success .select2-container--default .select2-selection--single:focus,
        .select2-container--default .has-success .select2-selection--single:focus,
        .has-success .select2-selection.select2-selection--multiple:focus,
        .has-success .wizard .content > .body input:focus,
        .wizard .content > .body .has-success input:focus,
        .has-success .mce-floatpanel .mce-textbox:focus,
        .mce-floatpanel .has-success .mce-textbox:focus,
        .has-success .mce-floatpanel .mce-btn:focus,
        .mce-floatpanel .has-success .mce-btn:focus,
        .has-success .dataTables_wrapper .dataTables_filter input:focus,
        .dataTables_wrapper .dataTables_filter .has-success input:focus,
        .has-success .dataTables_wrapper .dataTables_length select:focus,
        .dataTables_wrapper .dataTables_length .has-success select:focus,
        .has-success .jsgrid-cell input:focus,
        .jsgrid-cell .has-success input:focus,
        .has-success .jsgrid-cell select:focus,
        .jsgrid-cell .has-success select:focus,
        .has-success .tablesaw-bar .btn-select select:focus,
        .tablesaw-bar .btn-select .has-success select:focus,
        .has-success .dd-handle:focus,
        .has-success .dd3-content:focus {
            border-color: #71aa68;
        }

    .has-warning .form-control,
    .has-warning .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .has-warning .select2-selection__rendered,
    .has-warning .select2-container--default .select2-selection--single,
    .select2-container--default .has-warning .select2-selection--single,
    .has-warning .select2-selection.select2-selection--multiple,
    .has-warning .wizard .content > .body input,
    .wizard .content > .body .has-warning input,
    .has-warning .mce-floatpanel .mce-textbox,
    .mce-floatpanel .has-warning .mce-textbox,
    .has-warning .mce-floatpanel .mce-btn,
    .mce-floatpanel .has-warning .mce-btn,
    .has-warning .dataTables_wrapper .dataTables_filter input,
    .dataTables_wrapper .dataTables_filter .has-warning input,
    .has-warning .dataTables_wrapper .dataTables_length select,
    .dataTables_wrapper .dataTables_length .has-warning select,
    .has-warning .jsgrid-cell input,
    .jsgrid-cell .has-warning input,
    .has-warning .jsgrid-cell select,
    .jsgrid-cell .has-warning select,
    .has-warning .tablesaw-bar .btn-select select,
    .tablesaw-bar .btn-select .has-warning select,
    .has-warning .dd-handle,
    .has-warning .dd3-content,
    .has-warning .app-search .form-control:focus,
    .app-search .has-warning .form-control:focus,
    .has-warning .app-search .jsgrid-cell input:focus,
    .app-search .jsgrid-cell .has-warning input:focus,
    .has-warning .jsgrid-cell .app-search input:focus,
    .jsgrid-cell .app-search .has-warning input:focus,
    .has-warning .app-search .jsgrid-cell select:focus,
    .app-search .jsgrid-cell .has-warning select:focus,
    .has-warning .jsgrid-cell .app-search select:focus,
    .jsgrid-cell .app-search .has-warning select:focus,
    .has-warning .app-search .dd-handle:focus,
    .app-search .has-warning .dd-handle:focus,
    .has-warning .app-search .dd3-content:focus,
    .app-search .has-warning .dd3-content:focus {
        border-color: rgba(230, 176, 52, 0.5);
    }

        .has-warning .form-control:focus,
        .has-warning .select2-container--default .select2-selection--single .select2-selection__rendered:focus,
        .select2-container--default .select2-selection--single .has-warning .select2-selection__rendered:focus,
        .has-warning .select2-container--default .select2-selection--single:focus,
        .select2-container--default .has-warning .select2-selection--single:focus,
        .has-warning .select2-selection.select2-selection--multiple:focus,
        .has-warning .wizard .content > .body input:focus,
        .wizard .content > .body .has-warning input:focus,
        .has-warning .mce-floatpanel .mce-textbox:focus,
        .mce-floatpanel .has-warning .mce-textbox:focus,
        .has-warning .mce-floatpanel .mce-btn:focus,
        .mce-floatpanel .has-warning .mce-btn:focus,
        .has-warning .dataTables_wrapper .dataTables_filter input:focus,
        .dataTables_wrapper .dataTables_filter .has-warning input:focus,
        .has-warning .dataTables_wrapper .dataTables_length select:focus,
        .dataTables_wrapper .dataTables_length .has-warning select:focus,
        .has-warning .jsgrid-cell input:focus,
        .jsgrid-cell .has-warning input:focus,
        .has-warning .jsgrid-cell select:focus,
        .jsgrid-cell .has-warning select:focus,
        .has-warning .tablesaw-bar .btn-select select:focus,
        .tablesaw-bar .btn-select .has-warning select:focus,
        .has-warning .dd-handle:focus,
        .has-warning .dd3-content:focus {
            border-color: #e6b034;
        }

    .has-error .form-control,
    .has-error .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .has-error .select2-selection__rendered,
    .has-error .select2-container--default .select2-selection--single,
    .select2-container--default .has-error .select2-selection--single,
    .has-error .select2-selection.select2-selection--multiple,
    .has-error .wizard .content > .body input,
    .wizard .content > .body .has-error input,
    .has-error .mce-floatpanel .mce-textbox,
    .mce-floatpanel .has-error .mce-textbox,
    .has-error .mce-floatpanel .mce-btn,
    .mce-floatpanel .has-error .mce-btn,
    .has-error .dataTables_wrapper .dataTables_filter input,
    .dataTables_wrapper .dataTables_filter .has-error input,
    .has-error .dataTables_wrapper .dataTables_length select,
    .dataTables_wrapper .dataTables_length .has-error select,
    .has-error .jsgrid-cell input,
    .jsgrid-cell .has-error input,
    .has-error .jsgrid-cell select,
    .jsgrid-cell .has-error select,
    .has-error .tablesaw-bar .btn-select select,
    .tablesaw-bar .btn-select .has-error select,
    .has-error .dd-handle,
    .has-error .dd3-content,
    .has-error .app-search .form-control:focus,
    .app-search .has-error .form-control:focus,
    .has-error .app-search .jsgrid-cell input:focus,
    .app-search .jsgrid-cell .has-error input:focus,
    .has-error .jsgrid-cell .app-search input:focus,
    .jsgrid-cell .app-search .has-error input:focus,
    .has-error .app-search .jsgrid-cell select:focus,
    .app-search .jsgrid-cell .has-error select:focus,
    .has-error .jsgrid-cell .app-search select:focus,
    .jsgrid-cell .app-search .has-error select:focus,
    .has-error .app-search .dd-handle:focus,
    .app-search .has-error .dd-handle:focus,
    .has-error .app-search .dd3-content:focus,
    .app-search .has-error .dd3-content:focus {
        border-color: rgba(218, 71, 58, 0.5);
    }

        .has-error .form-control:focus,
        .has-error .select2-container--default .select2-selection--single .select2-selection__rendered:focus,
        .select2-container--default .select2-selection--single .has-error .select2-selection__rendered:focus,
        .has-error .select2-container--default .select2-selection--single:focus,
        .select2-container--default .has-error .select2-selection--single:focus,
        .has-error .select2-selection.select2-selection--multiple:focus,
        .has-error .wizard .content > .body input:focus,
        .wizard .content > .body .has-error input:focus,
        .has-error .mce-floatpanel .mce-textbox:focus,
        .mce-floatpanel .has-error .mce-textbox:focus,
        .has-error .mce-floatpanel .mce-btn:focus,
        .mce-floatpanel .has-error .mce-btn:focus,
        .has-error .dataTables_wrapper .dataTables_filter input:focus,
        .dataTables_wrapper .dataTables_filter .has-error input:focus,
        .has-error .dataTables_wrapper .dataTables_length select:focus,
        .dataTables_wrapper .dataTables_length .has-error select:focus,
        .has-error .jsgrid-cell input:focus,
        .jsgrid-cell .has-error input:focus,
        .has-error .jsgrid-cell select:focus,
        .jsgrid-cell .has-error select:focus,
        .has-error .tablesaw-bar .btn-select select:focus,
        .tablesaw-bar .btn-select .has-error select:focus,
        .has-error .dd-handle:focus,
        .has-error .dd3-content:focus {
            border-color: #da473a;
        }

    .has-success .checkbox,
    .has-success .checkbox-inline,
    .has-success .control-label,
    .has-success .help-block,
    .has-success .radio,
    .has-success .radio-inline,
    .has-success.checkbox label,
    .has-success.checkbox-inline label,
    .has-success.radio label,
    .has-success.radio-inline label {
        color: #71aa68;
    }

    .has-warning .checkbox,
    .has-warning .checkbox-inline,
    .has-warning .control-label,
    .has-warning .help-block,
    .has-warning .radio,
    .has-warning .radio-inline,
    .has-warning.checkbox label,
    .has-warning.checkbox-inline label,
    .has-warning.radio label,
    .has-warning.radio-inline label {
        color: #e6b034;
    }

    .has-error .checkbox,
    .has-error .checkbox-inline,
    .has-error .control-label,
    .has-error .help-block,
    .has-error .radio,
    .has-error .radio-inline,
    .has-error.checkbox label,
    .has-error.checkbox-inline label,
    .has-error.radio label,
    .has-error.radio-inline label {
        color: #da473a;
    }

    .has-error .input-group-addon {
        background-color: transparent;
        color: #da473a;
        border-color: rgba(218, 71, 58, 0.5);
    }

    .has-success .input-group-addon {
        background-color: transparent;
        color: #71aa68;
        border-color: rgba(113, 170, 104, 0.5);
    }

    .has-success .form-control-feedback {
        color: #71aa68;
    }

    .has-warning .form-control-feedback {
        color: #e6b034;
    }

    .has-error .form-control-feedback {
        color: #da473a;
    }


    .x_content input {
        display: block;
    }

    [type=button]:not(:disabled),
    [type=reset]:not(:disabled),
    [type=submit]:not(:disabled),
    button:not(:disabled) {
        cursor: pointer;
    }

    .btn-primary {
        color: #fff !important;
        background-color: #92A2BD !important;
        border-color: #92A2BD !important;
    }

    .btn {
        border-radius: 1 !important;
    }

    .btn-group-lg > .btn,
    .btn-lg {
        padding: .5rem 1rem;
        font-size: 1.25rem;
        line-height: 1.5;
        border-radius: .3rem;
    }

    .asterisco {
        color: red;
    }

    #newrol {
        border-radius: 0px 25px 25px 0px;
        border: 1px solid rgba(221, 226, 232, 0.49);
        border-left: 0;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        margin-bottom: 0 !important;
    }

    .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 2%;
        right: 2%;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                /*when hovering an item:*/
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>




<!--Nuevo usuario-->
<div class="x_panel" id="divNuevoUsuario">
    <div class="x_title">
        <h2>New User <small>Please complete all fields</small> </h2>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        <br>
        <h2>User Information </h2>
        <hr />
        <br>
        <div class="row">
            <div class="col-md-6">
                <div id="divCombo1" class="form-group">
                    <label class="control-label mb-10 text-left">Name * </label>
                    <input type="text" class="form-control validar" name="Nombre2" id="Name" placeholder="Name Complete" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                    <input type="text" style="display:none;" class="form-control" name="ID" id="ID">
                </div>
            </div>

            <div class="col-md-6">
                <div id="divCombolastName" class="form-group">
                    <label class="control-label mb-10 text-left">Last Name * </label>
                    <input type="text" class="form-control validar" name="LastName" id="LastName" placeholder="Last Name" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">

                </div>
            </div>

            <div class="col-md-6">
                <div id="divComboSecondLastName" class="form-group">
                    <label class="control-label mb-10 text-left">Second Last Name * </label>
                    <input type="text" class="form-control validar" name="SecondLastName" id="SecondLastName" placeholder="Second Last Name" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">

                </div>
            </div>


            <div class="col-md-6">
                <div id="divCombo2" class="form-group">
                    <label class="control-label mb-10 text-left">User Name * </label>
                    <input type="text" class="form-control validar" name="UserName" id="UserName" placeholder="User Name/Nick" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                </div>
            </div>
            <div class="col-md-6">
                <div id="divCombo3" class="form-group">
                    <label class="control-label mb-10 text-left">Password * </label>
                    <input type="password" class="form-control validar" name="Password" id="Password" placeholder="Password" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                </div>
            </div>
            <div class="col-md-6">
                <div id="divCombo6" class="form-group">
                    <label class="control-label mb-10 text-left">Telephone * </label>
                    <input type="text" required="required" class="form-control validar" id="Phone" placeholder="(555) 555-5555" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                </div>
            </div>
            <div class="col-md-6">
                <div id="divCombo7" class="form-group">
                    <label class="control-label mb-10 text-left">Email * </label>
                    <input type="text" class="form-control validar" name="Email" id="Email" placeholder="Email@Email.com" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                    <div id="xmail" class="" style="display: none;">
                        <h6 class="text-danger">
                            Invalid email
                        </h6>
                    </div>
                </div>
            </div>
        </div>
        <h2>System Information </h2>
        <hr />
        <br>
        <div class="row">
            <div class="col-md-6">
                <div id="divCombo4" class="form-group">
                    <label class="control-label mb-10 text-left">Role * </label>
                    <select id="Rol" class="form-control validarCombo">
                        <option value="Select Option" disabled selected="selected">Select Option</option>
                    </select>
                </div>
            </div>
            <div class="col-md-6">
                <div id="divCombo5" class="form-group">
                    <label class="control-label mb-10 text-left">Area * </label>
                    <select id="Areas" class="form-control validarCombo">
                        <option value="Select Option" disabled selected="selected">Select Option</option>

                    </select>
                </div>
            </div>
            <div class="col-md-6">
                <div id="divComboManager" class="form-group autocomplete">
                    <label class="control-label mb-10 text-left">Manager * </label>
                    <input type="text" class="form-control validar" name="Manager" id="Manager" placeholder="Manager" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                </div>
            </div>
            <div class="col-md-6">
                <div id="divCombo8" class="form-group autocomplete">
                    <label class="control-label mb-10 text-left">Department * </label>
                    <input type="text" class="form-control validar" name="Department" id="Department" data-id="" autocomplete="off" placeholder="Department" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                </div>
            </div>

            <div class="col-md-6">
                <div id="divCombo10" class="form-group autocomplete">
                    <label class="control-label mb-10 text-left">Company * </label>
                    <input type="text" class="form-control validar" name="Company" id="Company" placeholder="Company" data-id="" autocomplete="off" onKeyUp="document.getElementById(this.id).value=document.getElementById(this.id).value.toUpperCase()">
                </div>
            </div>


            <div class="col-md-6">
                <div id="divCombotag1" class="form-group autocomplete">
                    <label class="control-label mb-10 text-left">Tag 1 * </label>
                    <input type="text" class="form-control validar" name="Tag1" id="Tag1" placeholder="Tag 1" autocomplete="off">
                </div>
            </div>

            <div class="col-md-6">
                <div id="divCombotag2" class="form-group autocomplete">
                    <label class="control-label mb-10 text-left">Tag 2 * </label>
                    <input type="text" class="form-control" name="Tag2" id="Tag2" placeholder="Tag 2" autocomplete="off">
                </div>
            </div>
        </div>







        <div class="col-md-12" id="divMensajeError" style="display:none">
            <div class="alert alert-danger alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h6 class="pull-left" id="mensajeError">Error:.</h6>
                <div class="clearfix"></div>
            </div>
        </div>


    </div>
    <div class="form-group row form-group row pull-left">
        <div class="col-md-12">
            <button type="button" class="btn btn-primary" onclick="HomeUsuarios();">Cancel</button>
            <input type="button" value="Save" class="btn btn-success" id="SaveUserF" onclick="validaciones();">
        </div>
    </div>
</div>
<div id="error" class="alert alert-danger" role="alert" style="display:none;">
</div>



<div class="col-md-12" id="divMensajeError" style="display:none">
    <div class="alert alert-danger alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>

        <h6 class="pull-left" id="mensajeError">Error:.</h6>
        <div class="clearfix"></div>
    </div>
</div>












<script>
    var click = 0;
    var ArrCompany = [];
    var ArrCompany1 = [];
    var ArrDep = [];
    var ArrDep1 = [];
    var ArrManager = [];
    var ArrManager1 = [];
    $("#SaveUser").hide();


    main();
    function main() {
        $('#error').hide();
        //getDatosUsuarioModificar();
        //FillRol();
        getTagsValidar();
        FillAreas();
        FillPerfilesUsuarios();
    };


    $("#Phone").keypress(function (e) {
        var x = e.target.value.replace(/\D/g, '').match(/(\d{0,3})(\d{0,3})(\d{0,4})/);
        e.target.value = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');
    });

    var Areas;

    function FillAreas() {
        var sURL = IPWS + "Usuarios/GetAllAreas";
        $.ajax({
            url: sURL,
            dataType: "json",
            type: "GET",
            async: false,
            success: function (data) {
                if (data[0].AreaName != null) {
                    Areas = data;
                    for (var i = 0; i < Areas.length; i++) {
                        $("#Areas").append('<option value="' + Areas[i].ID +
                            '" data-id=" ' + Areas[i].ID + '" >' + Areas[i].AreaName + '</option>');
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {

            }
        });
    }

    var PerfilesUusarios;

    function FillPerfilesUsuarios() {
        var sURL = IPWS + "Usuarios/getAllPerfilesUsuarios";
        $.ajax({
            url: sURL,
            dataType: "json",
            type: "GET",
            async: false,
            success: function (data) {
                if (data[0].PerfilName != null) {
                    PerfilesUusarios = data;
                    for (var i = 0; i < PerfilesUusarios.length; i++) {
                        $("#Rol").append('<option value="' + PerfilesUusarios[i].ID +
                            '" data-id=" ' + PerfilesUusarios[i].ID + '" >' + PerfilesUusarios[i].PerfilName + '</option>');
                    }
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {

            }
        });
    }

    var Roles;

    function FillRol() {

        var sURL = IPWS + "Usuarios/GetAllRoles";
        $.ajax({
            url: sURL,
            dataType: "json",
            type: "GET",
            async: false,
            success: function (data) {
                if (data[0].RolName != null) {
                    roles = data;
                    for (var i = 0; i < roles.length; i++) {
                        $("#Rol").append('<option value="' + roles[i].ID +
                            '" data-id=" ' + roles[i].ID + '" >' + roles[i].RolName + '</option>');
                    }
                }

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                //
                //VaciarDatos();
                //swal("Error", "No hay conexion con el servidor", "error");
            }
        });

    }




    AutocompleteItem("#Company", "Usuarios/AutocompleteCompany", "Get");
    AutocompleteItem("#Department", "Usuarios/AutocompleteDepartamento", "Get");

    function AutocompleteItem(item, urlWS, metodo, op) {
        $(item).autocomplete({
            source: function (request, response) {
                var param = {
                    itemB: $(item).val()
                };
                $.ajax({
                    type: metodo,
                    //contentType: "application/json; charset=utf-8",
                    url: IPWS + urlWS,
                    data: param,
                    dataType: "json",
                    success: function (data) {
                        if (data[0].item != null) {
                            response(data);
                        }

                    },
                    error: function (result) {
                        alert("No Match");
                    }
                });
            },
            minLength: 2,
            focus: function (event, ui) {
                $(item).val(ui.item.item);
                return false;
            },
            select: function (event, ui) {

                console.log("item:" + ui.item.item + " ID:" + ui.item.ID);
                $(item).attr("data-id", ui.item.ID);
                //$("#project").val(ui.item.DepartamentName);
                //$("#project-id").val(ui.item.ID);

                return false;
            }
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            return $("<li>")
                .data("ui-autocomplete-item", item)
                .append("<a> " + item.item + "</a>")
                .appendTo(ul);
        };
    }
    //function ClearForm() {
    //    $('#Name').val("");
    //    $('#UserName').val("");
    //    $('#Password').val("");
    //    $('#Phone').val("");
    //    $('#Email').val("");
    //    $('#Company').val("");
    //    $('#Rol option:first').prop('selected', true);
    //    $('#Languague option:first').prop('selected', true);
    //    //"IdRol": 1,
    //    //"IdIdioma": 1,
    //}
    //$("#Clear").on('click', function () {
    //    ClearForm();
    //});




    $("#Email").keyup(function () {
        var valcorreo = validarcorreo();
        if (valcorreo == true) {
            $("#DivEmail").removeClass("has-error has-danger");
            $("#DivEmail").addClass("has-ok has-success");
        } else {
            $("#DivEmail").removeClass("has-ok has-success");
            $("#DivEmail").addClass("has-error has-danger");
        }


    });

    function validarcorreo() {
        console.log("Email");
        var email = $("#Email").val();
        var caract = new RegExp(/^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/);

        if (caract.test(email) == false) {
            $("#xmail").show();

            return false;
        } else {
            $("#xmail").hide();

            return true;
        }
    }

    function validaciones() {
        var textIdioma1 = "";
        var Idioma = "English";
        var alertManagerInvalid = '<i class="fa fa-warning  pr-15 pull-left"></i> Error: The manager is invalid.';
        var alertCompanyInvalid = '<i class="fa fa-warning  pr-15 pull-left"></i> Error: The company is invalid.';
        if (Idioma == "Espanol") {
            textIdioma1 = "Error: favor de llenar correctamente todos los campos";
        }
        if (Idioma == "English") {
            textIdioma1 =
                '<i class="fa fa-warning  pr-15 pull-left"></i> Error: please fill in all fields correctly.';
        }

        $('#divMensajeError').hide();
        var band = []
        var inputs = $(".validar");
        for (let i = 0; i < inputs.length; i++) {
            if (inputs[i].value == "") {
                $("#" + inputs[i].parentNode.id).removeClass("has-ok has-success");
                $("#" + inputs[i].parentNode.id).addClass("has-error has-danger");
                band.push(1);
            } else {

                $("#" + inputs[i].parentNode.id).addClass("has-ok has-success");
                $("#" + inputs[i].parentNode.id).removeClass("has-error has-danger");
                //var Company = $("#Company").val();
                //var manager = $("#manager").val();

                //var resultCompany = validarAutocomplete(ArrCompany1, Company);
                //var resultManager = validarAutocomplete(ArrManager1, manager);
                //if (resultCompany == "true") {
                //    $("#DivCompany").addClass("has-ok has-success");
                //    $("#DivCompany").removeClass("has-error has-danger");
                //    band.push(0);
                //} else {
                //    $("#DivCompany").removeClass("has-ok has-success");
                //    $("#DivCompany").addClass("has-error has-danger");
                //    band.push(2);
                //}

                //if (resultManager == "true") {
                //    $("#DivManager").addClass("has-ok has-success");
                //    $("#DivManager").removeClass("has-error has-danger");
                //    band.push(0);
                //} else {
                //    $("#DivManager").removeClass("has-ok has-success");
                //    $("#DivManager").addClass("has-error has-danger");
                //    band.push(3);
                //}

            }

        }


        var languague = $("#Languague").val();
        var Combos = $(".validarCombo");
        console.log("combo");
        for (let i = 0; i < Combos.length; i++) {
            if (Combos[i].value == "Select Option") {
                $("#" + Combos[i].parentNode.id).removeClass("has-ok has-success");
                $("#" + Combos[i].parentNode.id).addClass("has-error has-danger");
                band.push(1);
            } else {

                $("#" + Combos[i].parentNode.id).addClass("has-ok has-success");
                $("#" + Combos[i].parentNode.id).removeClass("has-error has-danger");
                band.push(0);
            }

        }
        var band2 = 0;

        var result = $.inArray(1, band);
        var result2 = $.inArray(2, band);
        var result3 = $.inArray(3, band);
        if (result != -1) {
            band2 = 1;

        } else if (result2 != -1) {

            band2 = 2;
        } else if (result3 != -1) {

            band2 = 3;
        }


        if (band2 == 0) {
            //ok
            var valcorreo = validarcorreo();
            if (valcorreo == true) {
                SaveUser2();
            }

        } else if (band2 == 1) {

            $('#divMensajeError').show();
            $('#mensajeError').html(textIdioma1);
            return false;
        } else if (band2 == 2) {
            $('#divMensajeError').hide();
            $('#divMensajeError').show();
            $('#mensajeError').html(alertCompanyInvalid);
            return false;
        } else if (band2 == 3) {
            $('#divMensajeError').hide();
            $('#divMensajeError').show();
            $('#mensajeError').html(alertManagerInvalid);
            return false;
        }

    }

    function validarAutocomplete(array, value) {
        var result = $.inArray(value, array);
        if (result != -1) {
            return "true";
        } else {
            return "false";
        }
    }

    function validateStep1() {
        var textIdioma1 = "";
        var Idioma = "English";
        var alertInvalid = '<i class="fa fa-warning  pr-15 pull-left"></i> Error: The department is invalid.';
        if (Idioma == "Espanol") {
            textIdioma1 = "Error: favor de llenar correctamente todos los campos";
        }
        if (Idioma == "English") {
            textIdioma1 = '<i class="fa fa-warning  pr-15 pull-left"></i> Error: please fill in all fields correctly.';
        }
        $('#divMensajeError').hide();
        var band = []
        var inputs = $(".validar");
        for (let i = 0; i < inputs.length; i++) {

            if (inputs[i].id == "Name" || inputs[i].id == "LastName" || inputs[i].id == "SecondLastName" || inputs[i].id == "UserName" || inputs[i].id == "Password" || inputs[i].id ==
                "department") {
                if (inputs[i].value == "") {
                    $("#" + inputs[i].parentNode.id).removeClass("has-ok has-success");
                    $("#" + inputs[i].parentNode.id).addClass("has-error has-danger");
                    band.push(1);
                } else {

                    $("#" + inputs[i].parentNode.id).addClass("has-ok has-success");
                    $("#" + inputs[i].parentNode.id).removeClass("has-error has-danger");
                    var department = $("#department").val();
                    var result = validarAutocomplete(ArrDep1, department);
                    if (result == "true") {
                        $("#" + inputs[i].parentNode.id).addClass("has-ok has-success");
                        $("#" + inputs[i].parentNode.id).removeClass("has-error has-danger");
                        band.push(0);
                    } else {
                        $("#Divdep").removeClass("has-ok has-success");
                        $("#Divdep").addClass("has-error has-danger");
                        band.push(2);
                    }
                }
            }


        }
        var Combos = $(".validarCombo");
        for (let i = 0; i < Combos.length; i++) {

            if (Combos[i].id == "Rol") {
                if (Combos[i].value == "Select Option") {
                    $("#" + Combos[i].parentNode.id).removeClass("has-ok has-success");
                    $("#" + Combos[i].parentNode.id).addClass("has-error has-danger");
                    band.push(1);
                } else {
                    $("#" + Combos[i].parentNode.id).addClass("has-ok has-success");
                    $("#" + Combos[i].parentNode.id).removeClass("has-error has-danger");
                    band.push(0);
                }
            }
        }
        var band2 = 0;
        var result = $.inArray(1, band);
        var result2 = $.inArray(2, band);
        if (result != -1) {
            band2 = 1;
        } else if (result2 != -1) {

            band2 = 2;
        }
        if (band2 == 0) {

            $('#divMensajeError').hide();
            return true;

        } else if (band2 == 1) {
            $('#divMensajeError').show();
            $('#mensajeError').html(textIdioma1);
            return false;
        } else if (band2 == 2) {
            $('#divMensajeError').hide();
            $('#divMensajeError').show();
            $('#mensajeError').html(alertInvalid);
            return false;
        }
    }
    function HomeUsuarios() {
        UpdateContenedor('Usuarios/AllUsuarios');
    }

    var datosUserTags;
    function getTagsValidar() {
        var sURL = IPWS + "/Usuarios/validarTag";
        $.ajax({
            url: sURL,
            dataType: "json",
            type: "GET",
            //data: para,
            async: false,
            crossDomain: true,
            xhrFields: {
                cors: false
            },
            cache: false,
            success: function (data) {
                if (data.Status == "ERROR") {
                    Swal.fire('Error!', data.Mensaje, 'error');
                } else {
                    datosUserTags = data;
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                Swal.fire('Error!', 'No conection to server!', 'error');
            }
        });
    }
    $("#Tag1").keyup(function () {
        for (var i = 0; i < datosUserTags.length; i++) {
            if ($('#Tag1').val() == "") {

            } else {
                if ($('#Tag1').val() == datosUserTags[i].Tag1 || $('#Tag1').val() == datosUserTags[i].Tag2) {
                    Swal.fire('Error!', 'The Tag is already registered, please check!', 'error');
                    $('#Tag1').val("");
                }
            }

        }
    });

    $("#Tag2").keyup(function () {
        for (var i = 0; i < datosUserTags.length; i++) {
            if ($('#Tag2').val() == "") {

            } else {
                if ($('#Tag2').val() == datosUserTags[i].Tag1 || $('#Tag2').val() == datosUserTags[i].Tag2) {
                    Swal.fire('Error!', 'The Tag is already registered, please check!', 'error');
                    $('#Tag2').val("");
                }
            }

        }
    });

    function SaveUser2() {
        var Name = $('#Name').val();
        var LastName = $('#LastName').val();
        var SecondLastName = $('#SecondLastName').val();
        var UserName = $('#UserName').val();
        var Password = $('#Password').val();
        var Correo = $('#Email').val();
        var Rol = $('#Rol option:selected').val();
        var Areas = $('#Areas option:selected').val();
        var manager = $('#Manager').val();
        var department = $("#Department").attr("data-id");
        var Compania = $('#Company').val();
        var Telefono = $('#Phone').val();
        var Tag1 = $('#Tag1').val();
        var Tag2 = $('#Tag2').val();
        var FisrtStep;
        var SecondStep;
        Swal.fire({
            title: 'Are you sure?',
            text: "This user will be seved!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, saved it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var para = {
                    "Nombre": Name,
                    "LastName": LastName,
                    "SecondLastName": SecondLastName,
                    "UserName": UserName,
                    "Password": Password,
                    "IdRol": Rol,
                    "IdIdioma": "1",
                    "Telefono": Telefono,
                    "Correo": Correo,
                    "Status": "1",
                    "Compania": Compania,
                    "Manager": manager,
                    "Departamento": department,
                    "Tag1": Tag1,
                    "Tag2": Tag2,
                    "IDPerfilUsuario": Rol,
                    "IDArea": Areas,
                };
                var sURL = IPWS + "/Usuarios/AddUsuario";
                $.ajax({
                    url: sURL,
                    dataType: "json",
                    type: "POST",
                    async: false,
                    data: para,
                    success: function (data) {
                        if (data.Status == "OK") {
                            Swal.fire('OK!', 'THE USER SAVED SUCCESSFULLY!', 'success');
                            HomeUsuarios();
                        } else {
                            Swal.fire('ERROR!', 'ERROR SAVING DATA!', 'danger');
                        }
                        //llenarCombos();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        //VaciarDatos();
                        Swal.fire('ERROR!', 'THERE IS NO CONNECTION TO THE SERVER!', 'danger');
                    }
                });
            }
        })
    }
</script>
<!-- Custom Theme Scripts -->
